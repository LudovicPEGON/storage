# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://jhipster.github.io/profiles/
# More information on configuration properties: https://jhipster.github.io/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    client:
        enabled: true
        healthcheck:
            enabled: true
        fetch-registry: true
        register-with-eureka: true
        instance-info-replication-interval-seconds: 10
        registry-fetch-interval-seconds: 10
    instance:
        appname: storage
        instanceId: storage:${spring.application.instance-id:${random.value}}
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 10
        status-page-url-path: ${management.context-path}/info
        health-check-url-path: ${management.context-path}/health
        metadata-map:
            zone: primary # This is needed for the load balancer
            profile: ${spring.profiles.active}
            version: ${info.project.version}
ribbon:
    eureka:
        enabled: true
    ReadTimeout: 30000
    ConnectTimeout: 30000    
# See https://github.com/Netflix/Hystrix/wiki/Configuration
#hystrix:
#    command:
#        default:
#            execution:
#                isolation:
#                    thread:
#                        timeoutInMilliseconds: 10000

management:
    security:
        roles: ADMIN
    context-path: /management
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
spring:
    application:
        name: storage
    jackson:
        serialization.write_dates_as_timestamps: false
    jpa:
        open-in-view: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: XHTML
    profiles:
        include: no-liquibase

security:
    basic:
        enabled: false
    oauth2:
        resource:
            filter-order: 3

server:
    session:
        cookie:
            http-only: true
    front: http://localhost:8084

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://jhipster.github.io/common-application-properties/
# ===================================================================

jhipster:
    async:
        core-pool-size: 6
        max-pool-size: 50
        queue-capacity: 10000
    # By default CORS is disabled. Uncomment to enable.
    #cors:
        #allowed-origins: "*"
        #allowed-methods: GET, PUT, POST, DELETE, OPTIONS
        #allowed-headers: "*"
        #exposed-headers:
        #allow-credentials: true
        #max-age: 1800
    mail:
        from: storage@localhost
    swagger:
        default-include-pattern: /api/.*
        title: storage API
        description: storage API documentation
        version: 0.0.1
        terms-of-service-url:
        contact-name:
        contact-url:
        contact-email:
        license:
        license-url:
    ribbon:
        display-on-active-profiles: dev

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://jhipster.github.io/common-application-properties/
# ===================================================================


  
  

storage:
   

    repositories:
        - name: g1
          type: GOOGLE
          rootDirectory: 0B-pBfcA-dNNOdzgtVUhNSFJQU0k
        - name: l1
          type: FS
          rootDirectory: user.home
          patterns: doc,docx,xls,xlsx,ppt,pptx,msg,pdf,jpg,gif
          changeService:
            type: LOGS            #LOGS or ANALYTICS
            maxrows: 1000
            scheduler: 30          #in seconds
          params :
            watcher: true
            synchroDelay: 86400   #in seconds
        - name: l2
          type: FS
          rootDirectory: ./storage2
        - name: od1
          type: ONEDRIVE

onedrive:
    client:
#      clientId: 52f5422b-07c0-46e1-a30f-b7f0867346d3
      clientId: 9d917e4b-39b2-4c75-b226-da68ce21686b
#      clientSecret: nJiXnKFgRt5EtmWFcBYM8w5
      clientSecret: gcuoatzrz7HVgrnzjdZXAiB
      scope: files.readwrite offline_access
      accessTokenUri: https://login.microsoftonline.com/common/oauth2/v2.0/token
      userAuthorizationUri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
    resource:
       userInfoUri: https://graph.microsoft.com/v1.0/me
       
       
google:
    client:
      clientId: 593265142070-igf5kb3ljcrf976mbfeqgf39pd4o85q1.apps.googleusercontent.com
      clientSecret: SuSCiQn8Gj7pLdTovAo2lEln
      scope: https://www.googleapis.com/auth/drive
      accessTokenUri: https://accounts.google.com/o/oauth2/token
      userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
    resource:
       userInfoUri: https://graph.microsoft.com/v1.0/me

application: